// Soft Cooldowns
@CONTRACT_TYPE:HAS[#cooldown]:BEFORE[zGenericValueContracts] {
	@genericValue = #$genericValue$ * @cooldownMultiplier
	@genericAdvance = #$genericAdvance$ * @cooldownMultiplier
	@genericReward = #$genericReward$ * @cooldownMultiplier
	@genericPenalty = #$genericPenalty$ * @cooldownMultiplier
}
@CONTRACT_TYPE:HAS[#cooldown]:FOR[zGenericValueContracts] {
	DATA {
		type = int
		waitDays = 0
		expectedDays = #$../cooldown$
		doublingPeriods = 3
	}
	DATA {
		type = float
		fullTime = @waitDays + @expectedDays
		cooldownMultiplier = Log(Max(@amountRecovered, 1), @doublingPeriods) + Max(Min(@amountRecovered, 1), 0)
		cooldownMultiplierPercent = Round(@cooldownMultiplier * 100, 1)
	}
	@description ^= :$:<br><br><b>This contract has reduced value after recent completion. Value will return to 100% after @fullTime days from the last completion. Value will slowly continue to rise after 100%. Current value is @cooldownMultiplierPercent% of the nominal amount.</b>:
}
@CONTRACT_TYPE:HAS[#cooldown]:AFTER[zGenericValueContracts] {
	-cooldown,0=remove
}

// Generic Value
@CONTRACT_TYPE:HAS[~genericValue]:BEFORE[zGenericValueContracts] {
	genericValue = 0
}
@CONTRACT_TYPE:HAS[~genericAdvance]:BEFORE[zGenericValueContracts] {
	genericAdvance = 0
}
@CONTRACT_TYPE:HAS[~genericReward]:BEFORE[zGenericValueContracts] {
	genericReward = 0
}
@CONTRACT_TYPE:HAS[~genericPenalty]:BEFORE[zGenericValueContracts] {
	genericPenalty = 50 // In percent
}
@CONTRACT_TYPE:FOR[zGenericValueContracts] {
	%advanceFunds = 1000 * (@genericValue * 0.5 + @genericAdvance)
	%rewardFunds = 1000 * (@genericValue * 0.5 + @genericReward)
	%rewardReputation = Round(Pow(@rewardFunds/1000, 0.5))
	%failureFunds = @advanceFunds * @genericPenalty
	%failureReputation = @rewardReputation * @genericPenalty
}
@CONTRACT_TYPE:NEEDS[HistoricalBudgets]:FOR[zGenericValueContracts] {
	@advanceFunds = 1000 * (@genericValue * 0.1 + @genericAdvance)
	@rewardFunds = 0
	@rewardReputation = (@genericValue + @genericReward)
	@failureFunds = 0
	@failureReputation = @advanceFunds * @genericPenalty * 0.001
}
@CONTRACT_TYPE:AFTER[zGenericValueContracts] {
	DATA {
		type = float
		name = GenericValueContractsData		
		genericValue = #$../genericValue$ / ContractMultiplier() * @cooldownMultiplier
		genericAdvance = #$../genericAdvance$ / ContractMultiplier() * @cooldownMultiplier
		genericReward = #$../genericReward$ / ContractMultiplier() * @cooldownMultiplier
		genericPenalty = #$../genericPenalty$ * 0.01
	}
}
@CONTRACT_TYPE:HAS[!DATA:HAS[#cooldownMultiplier]]:AFTER[zGenericValueContracts] {
	@DATA[GenericValueContractsData] {
		cooldownMultiplier = 1
	}
}
@CONTRACT_TYPE:AFTER[zGenericValueContracts] {
	-genericValue,0=remove
	-genericAdvance,0=remove
	-genericReward,0=remove
	-genericPenalty,0=remove
}