CONTRACT_TYPE {
	name = SoundingDistance1
	group = HistoricalSounding
    sortKey = 991
			
	// ************************ REQUIREMENTS ************************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = SoundingFirst
		title = Complete @contractType
	}
	REQUIREMENT	{
		name = AcceptContract
		type = AcceptContract
	 	checkOnActiveContract = true
    	invertRequirement = true
		contractType = SoundingDistance2
		title = Do not accept @contractType
	}
		
	// ************************ DATA ************************
	DATA  {
		type = float
		index = SoundingDistanceIndex1
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			SoundingDistanceIndex1 = SoundingDistanceIndex1 + 1
		}
	}	
	DATA {
		type = List<float>
		distances = [ 100, 150, 200, 250, 300 ] 
	}
	DATA {
		type = float
		payload = 400
		baseReward = 4
	}
	DATA {
		type = string
		numeral = "I"
	}
}
CONTRACT_TYPE {
	name = SoundingDistance2
	group = HistoricalSounding
    sortKey = 992
			
	// ************************ REQUIREMENTS ************************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = SoundingDistance1
		title = Complete @contractType
	}
	REQUIREMENT	{
		name = AcceptContract
		type = AcceptContract
	 	checkOnActiveContract = true
    	invertRequirement = true
		contractType = SoundingDistance3
		title = Do not accept @contractType
	}
		
	// ************************ DATA ************************
	DATA  {
		type = float
		index = SoundingDistanceIndex2
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			SoundingDistanceIndex2 = SoundingDistanceIndex2 + 1
		}
	}	
	DATA {
		type = List<float>
		distances = [ 300, 400, 500, 600, 700 ] 
	}
	DATA {
		type = float
		payload = 500
		baseReward = 6
	}
	DATA {
		type = string
		numeral = "II"
	}
}
CONTRACT_TYPE {
	name = SoundingDistance3
	group = HistoricalSounding
    sortKey = 993
			
	// ************************ REQUIREMENTS ************************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = SoundingDistance2
		title = Complete @contractType
	}
	REQUIREMENT	{
		name = AcceptContract
		type = AcceptContract
	 	checkOnActiveContract = true
    	invertRequirement = true
		contractType = SoundingDistance4
		title = Do not accept @contractType
	}
		
	// ************************ DATA ************************
	DATA  {
		type = float
		index = SoundingDistanceIndex3
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			SoundingDistanceIndex3 = SoundingDistanceIndex3 + 1
		}
	}	
	DATA {
		type = List<float>
		distances = [ 400, 500, 600, 800, 900 ] 
	}
	DATA {
		type = float
		payload = 1000
		baseReward = 10
	}
	DATA {
		type = string
		numeral = "III"
	}
}
CONTRACT_TYPE {
	name = SoundingDistance4
	group = HistoricalSounding
    sortKey = 994
			
	// ************************ REQUIREMENTS ************************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = SoundingDistance3
		title = Complete @contractType
	}
		
	// ************************ DATA ************************
	DATA  {
		type = float
		index = SoundingDistanceIndex4
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			SoundingDistanceIndex4 = SoundingDistanceIndex4 + 1
		}
	}	
	DATA {
		type = List<float>
		distances = [ 1600, 1800, 2000, 2200, 2400 ] 
	}
	DATA {
		type = float
		payload = 500
		baseReward = 16
	}
	DATA {
		type = string
		numeral = "IV"
	}
}
	
@CONTRACT_TYPE[SoundingDistance*]:FOR[00HistoricContractSetup] {	
	title = Class @numeral Long-Distance Suborbital Rocketry
	description = Developing rockets is hard. As your space program matures, you will need to test new heavy engines and develop vehicles capable of putting larger payloads into orbit. To that effect, design, build and launch a class @numeral sounding rocket which will deliver @payload units of payload to a minimum downrange distance of @targetDistance km. The energy required will increase with each new series of rocket. You will recieve partial rewards if you fall short of this target, and you will recieve additional reward if you exceed it.<br>The class @numeral series of downrange rockets contains four contracts, of which @index have been completed.<br><br><b>YOU WILL NO LONGER BE ABLE TO COMPLETE CONTRACTS OF THIS SERIES ONCE YOU ACCEPT A CONTRACT OF THE FOLLOWING SERIES. Be sure you are ready for the next challenge before accepting a contract from a new series!</b>
	genericDescription = Deliver the payload a specified distance downrange. This contract will stretch your capabilities and enable harder contracts.
	synopsis = Launch a guided sounding rocket with @payload units of payload to a downrange distance of @targetDistance km.
	completedMessage = Congratulations on a successful launch! The rocket has delivered the payload.

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 4
	maxSimultaneous = 1
	deadline = 365
	
	targetBody = HomeWorld()
	
	// ************************ REWARDS ************************	
	DATA {
		type = List<float>
		advances = [	2,		1, 		0.5, 	0.125 ]
		rewards0 = [	1, 		0.5, 	0.25, 	0.125 ] 
		rewards1 = [	1, 		1, 		0.5, 	0.25 ] 
		rewards2 = [	1, 		1, 		1, 		0.5 ] 
		rewards3 = [	0.5,	1, 		1, 		1 ] 
		rewards4 = [	0.25,	0.5, 	1, 		1 ] 
	}
	DATA {
		type = float
		targetDistance = @distances.ElementAt(@index)
		thresholdAltitude = 50
	}

	prestige = Trivial
	genericAdvance = @advances.ElementAt(@index) * @baseReward
	genericReward = @baseReward

	// ************************ PARAMETERS ************************	
	PARAMETER {
		name = VesselGroupMain
		type = VesselParameterGroup		
		title = @/synopsis

		PARAMETER {
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}	
		PARAMETER {
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER {
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			title = Have a SoundingPayload of at least @/payload units on the craft
			minQuantity = @/payload-0.1
			hideChildren = true
			disableOnStateChange = true
		}	
		PARAMETER {
			name = AvionicsCheck
			type = AvionicsCheck
			continuousControlRequired = true
			hideChildren = true
		}
		PARAMETER {
			name = ReachDistance
			type = DownrangeDistance
			distance = @/targetDistance * 1000
		}
		PARAMETER {
			name = NoCheese
			type = ReachState
			title = Reach at least @/thresholdAltitude km
			minAltitude = @/thresholdAltitude * 1000
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER {
			name = ReenterAtmosphere
			type = ReachState
			maxAltitude = 15000
			title = Survive reentry with the payload and guidance to at least 15 km
			hideChildren = true
		}
	}	
	PARAMETER {
		name = VesselGroup0
		type = VesselParameterGroup		
		title = Reward for reaching @/distances.ElementAt(0) km downrange

		rewardFunds = @/rewardFunds * @/rewards0.ElementAt(@/index)
		rewardReputation = @/rewardReputation * @/rewards0.ElementAt(@/index)	
		optional = true
		
		PARAMETER {
			name = NewVessel0
			type = NewVessel
			hidden = true
			hideChildren = true
		}	
		PARAMETER {
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = ReachDistance
			type = DownrangeDistance
			distance = @/distances.ElementAt(0) * 1000
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload-0.1
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = AvionicsCheck
			type = AvionicsCheck
			continuousControlRequired = true
			hidden = true
			hideChildren = true
		}
		PARAMETER ReachState {
			name = NoCheese
			type = ReachState
			minAltitude = @/thresholdAltitude * 1000
			hidden = true
			hideChildren = true
			disableOnStateChange = true
		}
	}
	PARAMETER {
		name = VesselGroup1
		type = VesselParameterGroup		
		title = Reward for reaching @/distances.ElementAt(1) km downrange

		rewardFunds = @/rewardFunds * @/rewards1.ElementAt(@/index)
		rewardReputation = @/rewardReputation * @/rewards1.ElementAt(@/index)	
		optional = true
		
		PARAMETER {
			name = NewVessel1
			type = NewVessel
			hidden = true
			hideChildren = true
		}	
		PARAMETER {
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = ReachDistance
			type = DownrangeDistance
			distance = @/distances.ElementAt(1) * 1000
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload-0.1
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = AvionicsCheck
			type = AvionicsCheck
			continuousControlRequired = true
			hidden = true
			hideChildren = true
		}
		PARAMETER ReachState {
			name = NoCheese
			type = ReachState
			minAltitude = @/thresholdAltitude * 1000
			hidden = true
			hideChildren = true
			disableOnStateChange = true
		}
	}
	PARAMETER {
		name = VesselGroup2
		type = VesselParameterGroup		
		title = Reward for reaching @/distances.ElementAt(2) km downrange

		rewardFunds = @/rewardFunds * @/rewards2.ElementAt(@/index)
		rewardReputation = @/rewardReputation * @/rewards2.ElementAt(@/index)	
		optional = true
		
		PARAMETER {
			name = NewVessel2
			type = NewVessel
			hidden = true
			hideChildren = true
		}	
		PARAMETER {
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = ReachDistance
			type = DownrangeDistance
			distance = @/distances.ElementAt(2) * 1000
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload-0.1
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = AvionicsCheck
			type = AvionicsCheck
			continuousControlRequired = true
			hidden = true
			hideChildren = true
		}
		PARAMETER ReachState {
			name = NoCheese
			type = ReachState
			minAltitude = @/thresholdAltitude * 1000
			hidden = true
			hideChildren = true
			disableOnStateChange = true
		}
	}
	PARAMETER {
		name = VesselGroup3
		type = VesselParameterGroup		
		title = Reward for reaching @/distances.ElementAt(3) km downrange

		rewardFunds = @/rewardFunds * @/rewards3.ElementAt(@/index)
		rewardReputation = @/rewardReputation * @/rewards3.ElementAt(@/index)	
		optional = true
		
		PARAMETER {
			name = NewVessel3
			type = NewVessel
			hidden = true
			hideChildren = true
		}	
		PARAMETER {
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = ReachDistance
			type = DownrangeDistance
			distance = @/distances.ElementAt(3) * 1000
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload-0.1
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = AvionicsCheck
			type = AvionicsCheck
			continuousControlRequired = true
			hidden = true
			hideChildren = true
		}
		PARAMETER ReachState {
			name = NoCheese
			type = ReachState
			minAltitude = @/thresholdAltitude * 1000
			hidden = true
			hideChildren = true
			disableOnStateChange = true
		}
	}
	PARAMETER {
		name = VesselGroup4
		type = VesselParameterGroup		
		title = Reward for reaching @/distances.ElementAt(4) km downrange

		rewardFunds = @/rewardFunds * @/rewards4.ElementAt(@/index)
		rewardReputation = @/rewardReputation * @/rewards4.ElementAt(@/index)	
		optional = true
		
		PARAMETER {
			name = NewVessel4
			type = NewVessel
			hidden = true
			hideChildren = true
		}	
		PARAMETER {
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = ReachDistance
			type = DownrangeDistance
			distance = @/distances.ElementAt(4) * 1000
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload-0.1
			hidden = true
			hideChildren = true
		}
		PARAMETER {
			name = AvionicsCheck
			type = AvionicsCheck
			continuousControlRequired = true
			hidden = true
			hideChildren = true
		}
		PARAMETER ReachState {
			name = NoCheese
			type = ReachState
			minAltitude = @/thresholdAltitude * 1000
			hidden = true
			hideChildren = true
			disableOnStateChange = true
		}
	}
}
	